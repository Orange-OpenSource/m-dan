<?xml version="1.0" encoding="utf-8"?>
<!--
* This file is part of mDAN | mDan is a mobile application (Android and iOS)
* which explains accessibility guidelines and presents the best practices of
* a mobile systems in action.
*
* Copyright (c)  2016  Orange SA
* See the Creative Commons Legal Code Attribution 3.0 Unported License for
* more details (LICENSE file).
-->

<resources xmlns:tools="http://schemas.android.com/tools">

    <!-- project information -->
    <string name="app_name" translatable="true">mDAN</string>
    <string name="app_long_name">E-Accessibility Demonstrator</string>


    <!-- navigation drawer -->
    <string name="navigation_return">Go to the previous page</string>
    <string name="navigation_home">Go to the homepage</string>
    <string name="section_home">Home</string>
    <string name="section_criteria">Android Accessibility Guide</string>
    <string name="section_dev">Developer\'s guide</string>
    <string name="section_talkback">TalkBack</string>
    <string name="section_axs_options">Accessibility options</string>
    <string name="section_axs_orange">Accessibility at Orange</string>
    <string name="section_about">About</string>
    <string name="section_contact">Contact</string>


    <!-- @todo : remove it before release -->
    <string name="title_content">"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit.</string>

    <!-- commons -->
    <string name="alert_before_leaving">Warning, you will leave the application.\nConfirm?</string>
    <string name="selected">selected</string>
    <string name="not">not</string>
    <string name="on">on</string>
    <string name="promotion">promotion</string>
    <string name="image">image</string>
    <string name="step">step </string>
    <string name="heure"> hour </string>
    <string name="date_format">yyyy-MM-dd HH:mm</string>
    <string name="axsactivated">Accessible example</string>
    <string name="axsdisabled">Non accessible example</string>
    <string name="example">Example</string>
    <string name="alert_title">Information</string>
    <string name="alert_content">In order to understand the difference between the accessible and non accessible example, we recommend you turn on the following option: « %1s ».</string>
    <string name="alert_choice">don\'t show this (you will still be able to go to the accessibility option on the top right corner)</string>
    <string name="alert_ok">Handle accessibility options</string>
    <string name="alert_cancel">Cancel</string>
    <string name="alert_close_cd">Close the window</string>
    <string-array name="alert_options">
        <item>TalkBack</item>
        <item>Bigger font</item>
    </string-array>


    <!-- home view -->
    <string name="home_long_mdan">Digital Accessibility Demonstrator for mobile</string>
    <string name="home_content">Discover the accessibility through examples, explanation and accessibility tools!</string>
    <string name="home_section_criteria">Android\naccessibility guide</string>
    <string name="home_section_criteria_cd">Android accessibility guide, Button</string>
    <string name="home_section_dev">Developers\'\nGuide</string>
    <string name="home_section_dev_cd">Guide for developers, Button</string>
    <string name="home_section_talkback">TalkBack</string>
    <string name="home_section_talkback_cd">TalkBack user guide, Button</string>
    <string name="home_section_options">Accessibility\noptions</string>
    <string name="home_section_options_cd">Accessibility options, Button</string>

    <!-- old home view -->
    <string name="home_title_what">The accessibility, késako?</string>
    <string name="home_title_why">What is digital accessibility?</string>
    <string name="home_title_dan">Mobile Digital\nAccessibility Demonstrator</string>
    <string name="home_content_what" formatted="false">It is the ability of a product or service to be used by all in all kinds of situations. An accessible mobile application is an application that supports the built-in accessibility options of a device.\n\nThus, a blind user, visually impaired, hearing impaired or with any other type of disability will be able to use 100% of the functionality of the application.</string>
    <string name="home_content_why">• Because there is over 80 million disabled and elderly people in Europe\n• Because we spend on average 8 years of our life in a handicap situation\n• But also and especially because an accessible product is easier to use and everyone would benefit from it!</string>
    <string name="home_content_dan">Digital accessibility is often unknown or unrecognized field. \n\nThis Digital Accessibility Demonstrator aims to introduce mobile accessibility in all its forms.\n\nThe application explains:\n\n- What is digital accessibility\n- Accessibility options that exist on Android\nHow to use the built-in options\n A guide for TalkBack (Android screenreader).\n- Mobile accessibility criteria (non-technical presentation) with examples.\n- A memo for developers (how to develop accessible)..</string>


    <!-- criteria view -->
    <string-array name="criteria_list">
        <item>Image</item>
        <item>Colors</item>
        <item>Alternative text</item>
        <item>Title and header</item>
        <item>Element states</item>
        <item>Standard components</item>
        <item>Touch target</item>
        <item>Ghost element</item>
        <item>Text size</item>
        <item>Content control</item>
        <item>Changing content</item>
        <item>Horizontal scroll</item>
        <item>Form</item>
        <item>Reading order</item>
        <item>Focus navigation</item>
    </string-array>
    <string name="criteria_description_title">Description et how to use it</string>
    <string name="criteria_description_content">This guide aims to present the different accessibility criteria for getting an accessible Android application. Each criterion explains for whom it is important, when it can be implemented, why it is important and the corresponding accessibility rule. The criteria are explained through real case examples and must be used with TalkBack in order to test the accessibility.</string>
    <string name="criteria_description_content2">For the most part of the examples you must enable TalkBack, the built-in Android screen reader.</string>
    <string name="criteria_sections">Criteria</string>
    <string name="criteria_cd_sections">Select a criterion from the following list</string>
    <string name="criteria_accessible_example">Accessible example</string>
    <string name="criteria_accessible_example_more">Accessible example ++</string>
    <string name="criteria_not_accessible_example">Non accessible example</string>
    <string name="criteria_template_why">Why</string>
    <string name="criteria_template_rule">The rule</string>
    <string name="criteria_template_example">The examples</string>
    <string name="criteria_template_option">Option</string>
    <string name="criteria_template_option_tb">TalkBack</string>
    <string name="criteria_template_option_largetext">Bigger font</string>
    <string name="criteria_template_option_focus">Keyboard</string>

    <!-- criteria : images -->
    <string name="criteria_img_title">Image</string>
    <string name="criteria_img_why_description">The images are often used to convey a lot of information.\nAs the saying goes, a picture is worth a thousand words.</string>
    <string name="criteria_img_rule_description">The blind cannot see the images, it is important that they have an alternative that gives all the information carried by the image.\n\nSome images are used for decorative purposes. These pictures do not require alternative.\n\nWe will see through several examples how to set text alternatives for images.</string>
    <string name="criteria_img_ex1_description">All images conveying information must have a text alternative.\n\nIn the case of an image containing text, this text will be the alternative.\n\nIn the case of an image that provides information as a graph, drawing or other, the alternative will contain all necessary information in the image.</string>
    <string name="criteria_img_ex2_description">A decorative image itself is an image used for illustrative purposes or to highlight text.\n\nThe image is decorative only and is not intended to give any information to the user.\n\nThe image do not require text alternative. There is nothing to do in this case: by default on Android, images are not vocalized by the TalkBack screen reader</string>
    <string name="criteria_img_ex3_description">Application illustrations are also considered decorative images. The rule is the same. There is no alternative to add text\nThe icons are, conversely, widely used as buttons.\n\nTherefore they need relevant text alternatives</string>
    <string name="criteria_img_ex1_title">Image containing text or providing information</string>
    <string name="criteria_img_ex2_title">Decorative image</string>
    <string name="criteria_img_ex3_title">Icons and illustrations alternatives</string>
    <string name="criteria_img_ex1_cd_image">Buy internet plans up to 160 euros off if you are committed to another Internet provider and if you are an Orange mobile customer, click hhere to learn more about the offer, Button</string>
    <string name="criteria_img_ex2_logo">My Orange</string>
    <string name="criteria_img_ex2_image">My Orange icon</string>
    <string name="criteria_img_ex2_content">Service changes with Orange.\nMy Orange is an application that allows you to manage your account.</string>
    <string name="criteria_img_ex3_btn_parameters">Settings</string>
    <string name="criteria_img_ex3_btn_edit">Edit</string>
    <string name="criteria_img_ex3_cd_btn_edit">Edit the image name</string>
    <string name="criteria_img_ex3_cd_btn_parameters">Settings</string>
    <string name="criteria_img_ex3_cd_image">Man on a mountain peak</string>
    <string-array name="criteria_img_list">
        <item>Image carrying information</item>
        <item>Decorative image</item>
        <item>Illustrations and icons</item>
    </string-array>

    <!-- criteria : colors -->
    <string name="criteria_color_title">Color</string>
    <string name="criteria_color_why_description">Colors have a very important role in the transmission of information.\n\nSome colors are associated with concepts or feelings but we must never forget the part of the population that does not correctly distinguish colors.</string>
    <string name="criteria_color_rule_description">The most impacted are people with visual impairments.\n\nSome rules has to be followed:\n\n1. Do not use color as the only way of conveying information, indicating an action, requesting a response or distinguishing an element.\n\n2. The contrast between the color of the background and the text must be at least 7:1 and 4.5:1 for large font (can be measured with the color contrast analyzer tool).</string>
    <string name="criteria_color_ex1_description">"In an unfavorable environment (e.g. outdoors), all users can be uncomfortable with the screen contrast.\nThough, it is mandatory to pay attention to the contrast between the text color and the background.\n\nThe WCAG2 define 2 contrast levels to get a AA or AAA level. On mobile, we always try to reach the AAA level, which is 7:1.\n\nTo measure this contrast, one can use a lot of tools, Color Contrast Analyzer is one of them.</string>
    <string name="criteria_color_ex1_title">What is the correct contrast?</string>
    <string name="criteria_color_ex1_list_title">Example of title</string>
    <string name="criteria_color_ex1_list_subtitle">Example of subtitle</string>
    <string name="criteria_color_ex1_accessible_desc">In this example, the title and the subtitle have enough contrast.</string>
    <string name="criteria_color_ex1_not_accessible_desc">In this example, the title and the subtitle do not have enough contrast</string>
    <string name="criteria_color_ex2_title">Color must not be the only information channel.</string>
    <string name="criteria_color_ex2_description" formatted="false">Color must not be the only information channel. The shape or the position can be an alternative way to convey information. There are several disease related to visual impairments.\n\nFor example, colorblinds represent 8% of the male population, 0.5%  for the female population.\n\nIn the following example a colorblind cannot distinguish any of the service status.</string>
    <string name="criteria_color_ex2_legend">Legend</string>
    <string name="criteria_color_ex2_cd_active">is enabled</string>
    <string name="criteria_color_ex2_cd_error">has an issue </string>
    <string name="criteria_color_ex2_cd_inactive">is disabled</string>
    <string name="criteria_color_ex2_active">Enabled</string>
    <string name="criteria_color_ex2_error">Issue</string>
    <string name="criteria_color_ex2_inactive">Disabled</string>
    <string name="criteria_color_ex2_mailtv">Mail</string>
    <string name="criteria_color_ex2_audio">Audio streaming</string>
    <string name="criteria_color_ex2_videostream">Video streaming</string>
    <string name="criteria_color_ex2_browser">Web browser</string>
    <string name="criteria_color_ex2_service">The service </string>
    <string-array name="criteria_color_list">
        <item>Contrast </item>
        <item>Color conveying information</item>
    </string-array>

    <!-- criteria : alt -->
    <string name="criteria_alt_title">Textual alternatives</string>
    <string name="criteria_alt_why_description">Text alternatives are at the core of mobile accessibility. Thanks to them, a visually impaired user can use an application without loss of information.</string>
    <string name="criteria_alt_rule_description">As for the images, it is important to add a text alternative when information is not available for the visually impaired/blind.\n\nThis is the case of components that provide information by color, shape, position, sound…\n\nOn mobile, all components can have a text alternative, it is possible to enrich the native vocalization of an element, including a simple text.</string>
    <string name="criteria_alt_ex1_description">Space on mobile is reduced, we often use abbreviations for text.\nBut However, this raises an issue for voice synthesis users that vocalize abbreviations as is.\n\nTo correct these vocalizations, simply place a text alternative on the text. This alternative contains the unshorten text.\n\nNote that TalkBack can recognize some common abbreviations. For example, \"etc.\" is vocalized \"etcetera\".</string>
    <string name="criteria_alt_ex2_description">Some images are regularly associated with text to give information.\nThis is the case of \"unread messages\" when a badge shows the number of messages to read and which describes a \"message\".\n\nIn this case, the solution is to set a text alternative on the text that gives all the necessary information. For example: \"3 unread messages\".\n\nOne can also set this alternative on the images but in this case we must make the text \"invisible\" to the screen reader.</string>
    <string name="criteria_alt_ex3_description">Some complex components are difficult to make accessible.\nAlthough, with a correct alternatives, they can add the correct information to screen reader users.\n\nThe following component is a good example. Simply adding the position for each player, a TalkBack user will be able to know the full team formation.</string>
    <string name="criteria_alt_ex1_title">Textual alternatives for texts</string>
    <string name="criteria_alt_ex2_title">Image with added text</string>
    <string name="criteria_alt_ex1_txt1">Appt with Dr. François</string>
    <string name="criteria_alt_ex1_cd_txt1">Appointment with Doctor François</string>
    <string name="criteria_alt_ex1_txt2">Web application, mobile application etc.</string>
    <string name="criteria_alt_ex1_cd_txt2">Web application, mobile application etcetera </string>
    <string name="criteria_alt_ex1_txt3">eg. with mDAN</string>
    <string name="criteria_alt_ex1_cd_txt3">Example given with mDAN</string>
    <string name="criteria_alt_ex2_cd_btn"> unread messages</string>
    <string name="criteria_alt_ex3_title">Complex components and alternatives</string>
    <string name="criteria_alt_ex3_team1">France</string>
    <string name="criteria_alt_ex3_team2">Portugal</string>
    <string-array name="team1_players_nickname">
        <item>Lloris</item>
        <item>Evra</item>
        <item>Umtiti</item>
        <item>Koscielny</item>
        <item>Sagna</item>
        <item>Payet</item>
        <item>Matuidi</item>
        <item>Pogba</item>
        <item>Sissoko</item>
        <item>Griezmann</item>
        <item>Giroud</item>
    </string-array>
    <integer-array name="team1_players_role">
        <item>1</item>
        <item>5</item>
        <item>7</item>
        <item>8</item>
        <item>6</item>
        <item>9</item>
        <item>22</item>
        <item>23</item>
        <item>10</item>
        <item>13</item>
        <item>14</item>
    </integer-array>
    <string-array name="team2_players_nickname">
        <item>Rui Patricio</item>
        <item>Guerreiro</item>
        <item>José Fonte</item>
        <item>Pepe</item>
        <item>Cedric</item>
        <item>Joao Mario</item>
        <item>William</item>
        <item>Renato Sanches</item>
        <item>Adrien</item>
        <item>Ronaldo</item>
        <item>Nani</item>
    </string-array>
    <integer-array name="team2_players_role">
        <item>1</item>
        <item>5</item>
        <item>7</item>
        <item>8</item>
        <item>6</item>
        <item>9</item>
        <item>12</item>
        <item>10</item>
        <item>13</item>
        <item>17</item>
        <item>18</item>
    </integer-array>
    <string-array name="player_role">
        <item>subs</item><!-- remplacant-->
        <item>goalkeeper</item><!-- Gardien -->
        <item>defender</item><!-- Défenseur -->
        <item>midfielder</item><!-- Milieu -->
        <item>striker</item><!-- Attaquant -->
        <item>left wing-back</item><!-- latéral gauche -->
        <item>right wing-back</item><!-- latéral droit -->
        <item>left central defender</item><!-- central gauche -->
        <item>right central defender</item><!-- central droit -->
        <item>left midfielder</item><!-- milieu gauche -->
        <item>right midfielder</item><!-- milieu droit -->
        <item>centre midfielder</item><!-- milieu centre -->
        <item>defensive midfielder</item><!-- milieu défensif -->
        <item>attacking midfielder</item><!-- milieu offensif -->
        <item>main striker</item><!-- avant centre -->
        <item>false nine</item><!-- 9 1/2 -->
        <item>sweeper</item><!-- libero -->
        <item>left centre forward</item><!-- avant centre gauche-->
        <item>right centre forward</item><!-- avant centre droit-->
        <item>left central midfielder</item><!-- milieu centre gauche-->
        <item>right central midfielder</item><!-- milieu centre droit-->
        <item>central</item><!-- central-->
        <item>left defensive midfielder</item><!-- milieu défensif gauche-->
        <item>right defensive midfielder</item><!-- milieu défensif droit-->
        <item>left attacking midfielder</item><!-- milieu offensif gauche-->
        <item>right attacking midfielder</item><!-- milieu offensif droit-->
        <item>left winger</item><!-- ailier gauche-->
        <item>right winger</item><!-- ailier droit-->
        <item>left stopper</item><!-- stopper gauche-->
        <item>right stopper</item><!-- stopper droit-->
    </string-array>
    <string-array name="criteria_alt_list">
        <item>Images with text alternatives</item>
        <item>Element states</item>
        <item>Forms</item>
        <item>Abbreviations, date and time</item>
        <item>Image with text</item>
        <item>Complex components</item>
    </string-array>

    <!-- criteria : titles -->
    <string name="criteria_title_title">Titles and subtitles</string>
    <string name="criteria_title_why_description">The page title is the first element vocalized or seen on a screen mobile.\n\nIt makes the navigation easier for everyone: at any time, we know where we are in the application.</string>
    <string name="criteria_title_rule_description">Each screen must have its own title allowing use know where we are in the application navigation.</string>
    <string name="criteria_title_ex1_description">A common mistake is to set a unique title for every page of an application (or even no title at all).\n\nTherefore, it is necessary to set a relevant title to each page</string>
    <string name="criteria_title_ex1_title">Each page has its own title</string>
    <string name="criteria_title_ex1_axsDesc">In this example a title has been set.</string>
    <string name="criteria_title_ex1_notAxsDesc">In this example the title is not set.</string>
    <string name="criteria_title_ex1_axsButton">Accessible title</string>
    <string name="criteria_title_ex1_notAxsButton">Non accessible title</string>
    <string name="criteria_title_ex1_announceaxsyes">The page title is: </string>
    <string name="criteria_title_ex1_announceaxsno">The page has not</string>
    <string name="criteria_title_ex1_btn">Accessible title: </string>
    <string-array name="criteria_title_list">
        <item>Page title</item>
    </string-array>

    <!-- criteria : state -->
    <string name="criteria_stateelements_title">State element</string>
    <string name="criteria_stateelements_why_description">If an element does not vocalize its status, nature or state, the TalkBack user is unable to understand what is happening on the screen.\n\nNot specifying that a view is unfolded or that we have tabs are very common examples.</string>
    <string name="criteria_stateelements_rule_description">Any item whose status changes when using the application must vocalize its status through its text alternative.\n\nFor example, an item that can be selected/unselected must vocalize its state through a text alternative.</string>
    <string name="criteria_stateelement_ex1_description">Common mistake: the tabs. By default, tabs in Android do not give information on their nature and their state. It is therefore the responsibility of the developer to provide this information to the user via the corresponding accessibility attributes. In this case, a good alternative for the title of a tab can be "tab, tab title - 1 of 3 - selected"</string>
    <string name="criteria_stateelement_ex2_description">If a list item can be selected, its text alternative should reflect its state.\n\nIn the case of a list item, one should redefine the text alternative for each item.</string>
    <string name="criteria_stateelement_ex3_description">Another common mistake is when elements do not vocalize their state: the Expandable / Collapsable views. Again, thanks to the text alternative title of the view, we can vocalize the state of the view to the TalkBack users.</string>
    <string name="criteria_stateelement_ex1_title">Vocalize tab status</string>
    <string name="criteria_stateelement_ex1_public">Public network</string>
    <string name="criteria_stateelement_ex1_private">Private network</string>
    <string name="criteria_stateelement_ex2_title">List with a selected item</string>
    <string name="criteria_stateelement_ex2_axsDesc">In this example a text alternative has been set and it notifies TalkBack that a list item is selected.</string>
    <string name="criteria_stateelement_ex2_notAxsDesc">In this example there is no indication that there is a selected item.</string>
    <string name="criteria_stateelement_ex3_title">Vocalize the state of the Expandable / Collapsable views</string>
    <string name="criteria_stateelement_ex3_cd_open">, view is expanded, Click here to close</string>
    <string name="criteria_stateelement_ex3_cd_closed">, view is collapsed, Click here to unfold</string>
    <string name="criteria_stateelement_ex3_grp">Group </string>
    <string name="criteria_stateelement_ex3_item">Item </string>
    <string-array name="criteria_stateelement_list">
        <item>Tabs</item>
        <item>Lists</item>
        <item>Expandable / Collapsable views</item>
    </string-array>
    <string-array name="criteria_stateelement_ex2_list">
        <item>Demonstrator</item>
        <item>Accessibility</item>
    </string-array>

    <!-- criteria : standard -->
    <string name="criteria_standardcomponent_title">Standard components</string>
    <string name="criteria_standardcomponent_why_description">Accessibility is (mostly) handled in the native components.\n\nAdditionally, the use of standard components allows the user to be in a situation or behavior that he is already used to.\nNavigation through a standard interface is more comfortable.</string>
    <string name="criteria_standardcomponent_rule_description">Use native components as much as possible by changing their appearance.\n\nIf no standard component corresponds to the need, create a dedicated component based on a standard component while keeping the consistency / accessibility consistency.</string>
    <string name="criteria_standardcomponent_ex1_description">The following examples describe the difference between a standard component and a custom one, in this case: tabs.\nHowever, a custom component can be accessible: we see that on the second example.\n\nStandard components have already a correct vocalization. When using custom components, we have to make adjustments so they are accessible et correctly vocalized using the corresponding options.</string>
    <string name="criteria_standardcomponent_ex1_title">Standard components</string>
    <string name="criteria_standardcomponent_ex1_category1_name">The products</string>
    <string name="criteria_standardcomponent_ex1_category2_name">Sport</string>
    <string name="criteria_standardcomponent_ex1_category1_item1">HomeLive</string>
    <string name="criteria_standardcomponent_ex1_category1_item2">LiveBox</string>
    <string name="criteria_standardcomponent_ex1_category2_item1">Football</string>
    <string name="criteria_standardcomponent_ex1_category2_item2">Basketball</string>
    <string name="criteria_standardcomponent_ex2_title">Custom components</string>
    <string name="criteria_standardcomponent_ex2_description">In this example we have two expandable lists. However, these custom components can be accessible.\n\nThe non accessible example shows the component as it is once downloaded.\n\nYou have to take care of the accessibility of you custom component/ libraries when developping.</string>


    <!-- criteria : click area -->
    <string name="criteria_clickarea_title">Touch target</string>
    <string name="criteria_clickarea_why_description">If a touch target of a component is too small, it can prevent some users to enjoy the application.\n\nThis can lead to frustration that can result uninstalling it.</string>
    <string name="criteria_clickarea_rule_description">Each clickable element must have a touch target large enough.\n\n48 dp is the recommended touch target size for on-screen elements according to Google (height and width)</string>
    <string name="criteria_clickarea_ex1_description">In the following non accessible example, the \"play\" button does not have a large enough touch target, thus it is not easy to click on it.</string>
    <string name="criteria_clickarea_ex1_song1">Mary Daisy Jane</string>
    <string name="criteria_clickarea_ex1_song2">Mael</string>
    <string name="criteria_clickarea_ex1_play">Play the music</string>
    <string name="criteria_clickarea_ex1_music">Music</string>
    <string name="criteria_clickarea_ex1_author">of</string>
    <string name="criteria_clickarea_ex1_success">You successfully touched the button</string>
    <string-array name="criteria_clickarea_list">
        <item>Touch target</item>
    </string-array>

    <!-- criteria : ghost -->
    <string name="criteria_ghostelement_title">Ghost elements</string>
    <string name="criteria_ghostelement_why_description">Although invisible to the screen, some elements can be vocalized by the screen reader (elements positioned outside the visible area or hidden by other elements).\n\nThe superposition of screens is something current when designing mobile apps but it generates very heavy accessibility problems if it is not done properly from the start.\n\nA screen reader such as TalkBack is able to read information from a view that is placed \"under\" another. But if the user is able to interact with this view, it disturbs totally navigation and it quickly becomes impossible.</string>
    <string name="criteria_ghostelement_rule_description">With the screen reader, there is no invisible reachable element or that should not take focus when reading a page.</string>
    <string name="criteria_ghostelement_ex1_description">Common problem: the fragments. A fragment is a component that can be easily stacked one over another.\n\nImproper use of fragments may lead to serious problems when navigating with a screen reader.\n\nWith TalkBack, you could still browse in the previous page even it is not visible because a new page is on top.\nThe accessible example prevent reading behind the page.</string>
    <string name="criteria_ghostelement_ex1_title">View stack</string>
    <string name="criteria_ghostelement_ex1_ghost">Here, the page content is accessible</string>
    <string name="criteria_ghostelement_ex1_noghost">Here, the page content is not accessible</string>
    <string name="criteria_ghostelement_ex1_return">Go back to the previous page</string>
    <string-array name="criteria_ghostelement_list">
        <item>Ghost element</item>
    </string-array>

    <!-- criteria : text -->
    <string name="criteria_textsize_title">Text size</string>
    <string name="criteria_textsize_why_description">The user has the ability of increasing the text size via an accessibility option.\n\nIn order to make the application behave correctly to this option, it is necessary to use dynamic text sizes that adjust based on user settings.\n\nToo small text will be easily ignored by some visually impaired users.</string>
    <string name="criteria_textsize_rule_description">The application must implement dynamic text sizes, ensure good responsiveness of the display areas to text enlargement (containers that fit the size of their content).\n\nYou should also ensure a minimum size for text (14sp).</string>
    <string name="criteria_textsize_ex1_description">In the following example, the text is non accessible because it is not dynamic.\n\nThe accessibility option allowing to increase the text size will not work in this cases.</string>
    <string name="criteria_textsize_button_text">Change the accessibility options</string>
    <string name="criteria_textsize_ex1_sizetxtYes">This text uses a font size that can enlarge dynamically, thus, it will increase when enabling the bigger font size settings.</string>
    <string name="criteria_textsize_ex1_sizetxtNo">On the contrary, this text will not have a dynamic size</string>
    <string-array name="criteria_textsize_list">
        <item>Text size</item>
    </string-array>

    <!-- criteria : content control -->
    <string name="criteria_contentcontrol_title">Content control</string>
    <string name="criteria_contentcontrol_why_description">On mobile, screen readers try to notify the user when there is a context change. In some cases, it can give constant vocalizations, and therefore inaudible, or prevent any user action.</string>
    <string name="criteria_contentcontrol_rule_description">The user must control the content at any time. This is especially true with interactive content. So avoid video player launching directly in full screen mode, or videos starting automatically without user action, or a carousel scrolling automatically etc.</string>
    <string name="criteria_contentcontrol_ex_imgcd1">Order before the 21st ofCDecember and get a free fist before Christmas.</string>
    <string name="criteria_contentcontrol_ex_imgcd2">Deal, Sony Xperia Z3 for 1 euro instead of 69,99€ with the Origami Play 4Go plan, shipped before Christmas if ordered at Orange.fr before the 21th of December 2015.</string>
    <string name="criteria_contentcontrol_ex_imgcd3">"Deal, one free month on the Origami Play 4Go plan for any new subscription to Origami Play 4Go plan with 24-month engagement with the promo code PLAY4.</string>
    <string name="criteria_contentcontrol_ex1_title">Avoid automatic scrolling</string>
    <string name="criteria_contentcontrol_ex1_description">Here, the carousel is not accessible because it scrolls automatically and does not provide information on the images.\n\nFurthermore, depending on the implementation, it can vocalize each time the image is changed and can prevent the normal vocalization of the whole page.</string>
    <string name="criteria_contentcontrol_ex1_btn_previous">Previous deal</string>
    <string name="criteria_contentcontrol_ex1_btn_next">Next deal</string>
    <string name="criteria_contentcontrol_ex2_description">In this example, we display an image clicking on the button. A common mistake is to automatically open the image in fullscreen.\n\nThis will block the Talkback user if there is no button to close the fullscreen mode.</string>
    <string name="criteria_contentcontrol_ex2_announceForAxs">Slideshow started, touch quickly the screen with too fingers to stop it</string>
    <string name="criteria_contentcontrol_ex2_announceForAxs2">Slideshow stopped</string>
    <string name="criteria_contentcontrol_ex2_btn_previous">Previous image</string>
    <string name="criteria_contentcontrol_ex2_btn_next">Next image</string>
    <string name="criteria_contentcontrol_ex2_title">Accessible slideshow, it\'s possible</string>
    <string name="criteria_contentcontrol_ex2_cd_launch">Start the slideshow</string>
    <string-array name="criteria_contentcontrol_list">
        <item>Automatic slideshow</item>
        <item>Image slideshow</item>
    </string-array>

    <!-- criteria : content changes -->
    <string name="criteria_title_contentchange">Content change</string>
    <string name="criteria_why_description_contentchange">"When content is dynamically modified after a user action, the screen reader must notify it.\n\nWithout any voice feedback, the user does not know that the content has changed.</string>
    <string name="criteria_rule_description_contentchange">If the content has changed dynamically after a user action, it is important that the screen reader is notified so that it triggers a vocalization.\n\nE.g. refreshing a list or a timer.</string>
    <string name="criteria_contentchange_ex1_title">Vocalise element updates on the screen</string>
    <string name="criteria_contentchange_ex1_description">In this example, a list is refreshed automatically.\nIn the non accessible example, no vocalization is triggered.\n\nIf the user browser elsewhere on the screen, we will not be notified that new WiFi networks are available (unless he browse the list again).</string>
    <string name="criteria_contentchange_ex1_btn">Refresh content</string>
    <string name="criteria_contentchange_ex1_majwifireload">Refresh WiFi networks</string>
    <string name="criteria_contentchange_ex1_announce">The WiFi networks have been updated</string>
    <string name="criteria_contentchange_ex1_list_title">WiFi network list</string>
    <string-array name="criteria_contentchange_list">
        <item>Updating an element</item>
    </string-array>
    <string-array name="criteria_contentchange_ex1_list_wifi">
        <item>Numericable-BFF0</item>
        <item>FreeWifi</item>
    </string-array>

    <string-array name="criteria_contentchange_ex1_list_wifi2">
        <item>Bouygues Wi-Fi</item>
        <item>Freebox-47AT2</item>
    </string-array>

    <!-- criteria : scroll -->
    <string name="criteria_horizontalscroll_title">Horizontal scroll</string>
    <string name="criteria_horizontalscroll_why_description">"A horizontal scroll can be very difficult to detect if no visual feedback is displayed to help the user understand that there are several pages.</string>
    <string name="criteria_horizontalscroll_rule_description">Do not hesitate to display a view to indicate a horizontal scroll (\"dots\" for example).\n\nWhen necessary, also add \"next\" and \"previous\" buttons.</string>
    <string name="criteria_scroll_ex1_title">Show that we can scroll horizontally</string>
    <string name="criteria_scroll_ex1_description">"Here, the carousel is accessible because it has dots that reflect it has several pages.\nOn the contrary, in the non accessible example, one can think there is only one page.</string>
    <string-array name="criteria_scroll_list">
        <item>Horizontal scroll</item>
    </string-array>

    <!-- criteria : forms -->
    <string name="criteria_form_title">Form</string>
    <string name="criteria_form_why_description">Binding the form fields with their labels provides an additional vocalization allowing the user to understand what happens when filling out a form field.</string>
    <string name="criteria_form_rule_description">Each form field should be linked to a relevant label.</string>
    <string name="criteria_form_ex1_title">A form field must have a label</string>
    <string name="criteria_form_ex1_description">In the following example, some fields have a label, some do not. Thus, you can hear the difference between a field with and without a label.\nNote that the example text is vocalized correctly.</string>
    <string name="criteria_form_ex1_label_name">Name:</string>
    <string name="criteria_form_ex1_label_mail">Email:</string>
    <string name="criteria_form_ex1_placeholder">Repeat the email:</string>
    <string name="criteria_form_ex1_label_checkbox">Accept conditions</string>
    <string-array name="criteria_form_list">
        <item>Label</item>
    </string-array>

    <!-- criteria : read order -->
    <string name="criteria_readorder_title">Reading order</string>
    <string name="criteria_readorder_why_description">The reading order allows the screen reader user to locate the navigation and ensuring functional coherence.\n\nTherfore, it is important to pay attention to it.</string>
    <string name="criteria_readorder_rule_description">Ensure logic order and coherent reading to TalkBack users</string>
    <string name="criteria_readorder_ex1_description">In this example, the reading order is \"non accessible\" and does not allow the user to correctly use the remote control.\n\nThis one is incoherent and inconsistent. There is no logic order in the channel numbers.</string>
    <string name="criteria_readorder_ex1_volup">Turn up the volume, Button</string>
    <string name="criteria_readorder_ex1_voldown">Lower the volume, Button</string>
    <string name="criteria_readorder_ex1_canalup">Next channel, Button</string>
    <string name="criteria_readorder_ex1_canaldown">previous channel, Button</string>
    <string name="criteria_readorder_ex1_title">Ensure logic order and coherent reading</string>
    <string-array name="criteria_readorder_list">
        <item>Reading order</item>
    </string-array>

    <!-- criteria : focus nav -->
    <string name="criteria_focusnav_title">Focus navigation</string>
    <string name="criteria_focusnav_why_description">Focus navigation is very useful for people with motor or cognitive difficulties.\nThis navigation allows to go through the interactive elements (element on which an action can be performed).\nThis is the kind of navigation that you can have with a Bluetooth keyboard paired to a smartphone.</string>
    <string name="criteria_focusnav_rule_description">Reading order with focus must be relevant and logical.\n\nWe must be able to know at any time what is the focused element.</string>
    <string name="criteria_focusnav_ex1_description">For this example, try the focus navigation with a Bluetooth keyboard, a tablet dock or a dedicated application.</string>
    <string name="criteria_focusnav_ex1_title">Handle keyboard navigation</string>
    <string name="criteria_focusnav_ex1_axs">The mDAN app is fully compatible with focus navigation (except the following example). What is a better example than mDAN itself?</string>
    <string-array name="criteria_focusnav_list">
        <item>Focus navigation</item>
    </string-array>
    <string-array name="criteria_focusnav_ex1_list">
        <item>Example 1</item>
        <item>Example 2</item>
        <item>Example 3</item>
    </string-array>


    <!-- guide dev view -->
    <string-array name="dev_list">
        <item>Text alternative</item>
        <item>Hide elements from accessibility</item>
        <item>Trigger vocalization</item>
        <item>Check if TalkBack is enabled</item>
        <item>Live region (dynamic content)</item>
        <item>Handle reading order (TalkBack)</item>
        <item>Forms</item>
        <item>Text size</item>
        <item>Accessibility events &amp; Custom Views</item>
        <item>WebView</item>
        <item>List vocalization</item>
        <item>Focus navigation</item>
    </string-array>
    <string name="dev_description_title">Description and how to use it</string>
    <string name="dev_description_content">The developer guide aims to help the developers with the most important accessibility options available on the Android SDK. Through several categories, this guide explains how to use the accessibility attributes and methods and provides different links to the Google\'s official documentation.</string>
    <string name="dev_sections">Categories</string>
    <string name="dev_cd_sections">Select an option</string>
    <string name="dev_link">Link:</string>
    <string name="dev_links">Links:</string>
    <string name="dev_description">Description:</string>

    <!-- guide dev : alt -->
    <string name="dev_title_alt">Text alternatives</string>
    <string name="dev_description_alt">On android, The text alternative of an element is set via the <i>contentDescription</i> attribute.\n\nThis attribute accepting a single string parameter (and therefore localizable) completely redefines the text to be read by the accessibility service like TalkBack.\nThis allows a component to be more explicit than the text displayed on the screen. For example, in the case of a button whose title is "OK", the `contentDescription` attribute can indicate that the button is used to confirm an action.
        \n\nThe <i>contentDescription</i> attribute must also be used on custom elements to indicate their nature. For example, a clickable <i>LinearLayout</i> must have a <i>contentDescription</i> like "button_name, button" (it should also be accessible with the focus, see the corresponding section).
\n\nNote that the <i>contentDescription</i> is available in any element that inherits from <i>View</i>. It is therefore possible to set a <i>contentDescription</i> on a <i>TextView</i> for example, as shown in the "accessibility guide - text alternative - abbreviations, dates and times" section.</string>
    <string name="dev_lien_alt">- contentDescription : \n\n http://developer.android.com/reference/android/view/View.html#attr_android:contentDescription</string>

    <!-- guide dev : hide -->
    <string name="dev_title_hideaxs">Hiding elements from accessibility</string>
    <string name="dev_description_hideaxs">It is possible via an accessibility attribute to hide elements from accessibility tools (e.g. TalkBack). By extension, it is possible to force some elements to be visible to accessibility tools.\n\n
<i>ImportantForAccessibility</i>: depending on the value of the attribute, it indicates if an element is whether visible or not to the Accessibility API.\n\n
-	<i>auto</i> (0): this is the default, it is the system that decides. For example, a <i>Button</i> will have its default value set to 1 (<i>yes</i>) and a <i>LinearLayout</i> set to 2 (<i>no</i>).\n\n
-	<i>yes</i> (1): the view is important for accessibility. For example, it can receive the TalkBack focus.\n\n
-	<i>no</i> (2): the view is not important for accessibility. It does not trigger accessibility events and is therefore ignored by accessibility services such as TalkBack.\n\n
-	<i>noHideDescendants</i> (4): the view is not important for accessibility, but also his children views. This will hide all the items in a view to accessibility at once. Very useful on custom elements.\n\nNote: the "<i>importantForAccessibility</i>" attribute is available to any element that inherits from View.</string>
    <string name="dev_lien_hideaxs">-	importantForAccessibility :\n\nhttp://developer.android.com/reference/android/view/View.html#attr_android:importantForAccessibility</string>

    <!-- guide dev : vocalization -->
    <string name="dev_title_voc">Trigger a vocalization</string>
    <string name="dev_description_voc">It is very easy to trigger vocalizations with TalkBack.\n\nWarning: we are talking about TalkBack vocalization and not TTS (Text To Speech) that can operate whether TalkBack is on or off. Triggering a vocalization is very useful for dynamic content, just like a <i>LiveRegion</i> (see corresponding section).\n\nTo trigger a vocalization, just call the <i>announceForAccessibility</i> method with the id parameter of the string to vocalize.\n\nNote: the <i>announceForAccessibility</i> method is available on any item that inherits from View and is made in the system language.</string>
    <string name="dev_lien_voc">-	announceForAccessibility : \n\nhttp://developer.android.com/reference/android/view/View.html#announceForAccessibility&amp;#3728java.lang.CharSequence&amp;#3729</string>

    <!-- guide dev : accessibility activated -->
    <string name="dev_title_detect">Check if Talkback is on</string>
    <string name="dev_description_detect">On Android, it is possible to know whether the Accessibility API is enabled, thus whether TalkBack is enabled.\n\nUsage: \n\n
        <![CDATA[ <b><font color=#A885D8>AccessibilityManager</b>]]> am = (<![CDATA[<b><font color=#A885D8>AccessibilityManager</b>]]>) <![CDATA[<b><font color=#A885D8>context</b>]]>.getSystemService(<![CDATA[<b><font color=#A885D8>ACCESSIBILITY_SERVICE</b>]]>);\n
<![CDATA[<b><font color=#A885D8>boolean</b>]]> isAccessibilityEnabled = am.<![CDATA[<b><font color=#A885D8>isEnabled()</b>]]>;</string>

    <!-- guide dev : live region -->
    <string name="dev_title_liveregion">Live region (dynamic content)</string>
    <string name="dev_description_liveregion">You can specify to a view that it is an "live" region, it means that its content is subject to change dynamically and should in this case notify the Accessibility API.\nThis will generate TalkBack vocalizations.\n\nA typical use case: on a form, if the user makes a mistake and an error message appears, the view containing the error message must be defined as a "live" region.\n\nWe must use the <i>setAccessibilityLiveRegion</i> method that takes a mode parameter for the live region. There are 3 modes:\n\n
- ACCESSIBILITY_LIVE_REGION_NONE: this view is not a live region. This is the default for most views.\n\n
- ACCESSIBILITY_LIVE_REGION_POLITE: when a change occurs, vocalizations are triggered on the changes. These vocalizations are "polite"; they have lower priority than system vocalizations for example.\n\n
- ACCESSIBILITY_LIVE_REGION_ASSERTIVE: when a change occurs, vocalizations are triggered on the changes. These vocalizations are "assertive"; they have the highest priority and are immediately vocalized.\n\nNote the "<i>setAccessibilityLiveRegion</i>" method is available on any class that inherits from View.</string>
    <string name="dev_lien_liveregion">-	setAccessibilityLiveRegion :\n\nhttp://developer.android.com/reference/android/view/View.html#setAccessibilityLiveRegion&amp;#3728int&amp;#3729</string>

    <!-- guide dev : read order (TalkBack) -->
    <string name="dev_title_talkbackreadorder">Reading order (TalkBack)</string>
    <string name="dev_description_talkbackreadorder">By default, the reading order of voice synthesis depends on: the \'logical\' reading (in France), from left to right and top to bottom, and xml reading (order of elements declaration).\nIt is quite possible to redefine the reading order with two attributes:\n\n
    -	<i>accessibilityTraversalAfter</i>: sets the id of a view after which this one is visited in accessibility traversal. A screen-reader must visit the content of the other view before the content of this one.\n\n
- <i>accessibilityTraversalBefore</i>: sets the id of a view before which this one is visited in accessibility traversal. A screen-reader must visit the content of this view before the content of the one it precedes.\n\nNote: These attributes can be used directly in the xml but also in the code via the "<i>setAccessibilityTraversalBefore</i>" and "<i>setAccessibilityTraversalAfter</i>" methods. These methods are available for any element that inherits from View.</string>
    <string name="dev_lien_talkbackreadorder" formatted="false">
    -	setAccessibilityTraversalAfter: \nhttp://developer.android.com/reference/android/view/View.html#setAccessibilityTraversalAfter&amp;#3728int&amp;#3729 \n\n
-	setAccessibilityTraversalBefore: \nhttp://developer.android.com/reference/android/view/View.html#setAccessibilityTraversalBefore&amp;#3728int&amp;#3729</string>

    <!-- guide dev : forms -->
    <string name="dev_title_form">Forms</string>
    <string name="dev_description_form">It is very important to bind the form fields with their labels.\nThere are 2 major techniques to achieve this:\n\n
    -	<i>labelFor</i>: allow to specify a label to a view. This method takes the id of the view that it is associated. This method can be used any almost type of form field. We can also use xml "<i>android:labelFor</i>" or programmatically "<i>setLabelFor</i>". <i>LabelFor</i> is available is available in any element that inherits from <i>View</i>.\n\n
- <i>hint</i> :add an example text when the text field is empty. This method only works for "<i>TextView</i>". Supports setting the id to a string. Can be used in xml "<i>android:hint</i>" or programmatically "<i>setHint</i>".\n</string>
    <string name="dev_lien_form">-	setLabelFor :\nhttp://developer.android.com/reference/android/view/View.html#setLabelFor&amp;#3728int&amp;#3729 \n\n-	setHint : \nhttp://developer.android.com/reference/android/widget/TextView.html#setHint&amp;#3728int&amp;#3729</string>

    <!-- guide dev : text size -->
    <string name="dev_title_textsize">Text size</string>
    <string name="dev_description_txtsize">To enable the "Huge font size" option to properly interact with the application, several points are to be respected during the development.\n\n<u>Use dynamic font size:</u> the « <i>sp</i> ».\nThis unit, specific to Android, allows to have a font size proportional to the pixel density of the display.\nIt is highly recommended to use it for text, if only for a uniform design on all types of Android device.\n\n<u>Manage content overflows:</u> A common mistake is to use a dynamic text size ("sp") but not to pay attention to the container size. If the text gets bigger, the container must adapt so there is no overflow. One can perfectly play with the "<i>min-height</i>" and "<i>height</i>" attributes for correct result (the "<i>height</i>"set to "<i>wrap_content</i>" and "<i>min-height</i>" set to the default desired height).</string>
    <string name="dev_lien_txtsize">- sp :\n\nhttps://www.google.com/design/spec/style/typography.html#typography-styles</string>

    <!-- guide dev : events -->
    <string name="dev_title_axsevents">Accessibility events &amp; Custom Views</string>
    <string name="dev_description_axsevents">On Android there are several events available for accessibility.\nYou can manipulate them just like any event. They can enhance custom views that are not accessible enough.\n\nUsing accessible events is not common on applications that are not intended to be used by disabled people, because other options are in most cases enough.\nMeanwhile, one must know they exist and they let you redefine the vocalization of a component.\n\nFor more information, please refer to the following links:</string>
    <string name="dev_lien_axsevents">-	AccessibilityEvents :\nhttp://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html\n\n-	Building custom views :\nhttp://developer.android.com/guide/topics/ui/accessibility/apps.html#custom-views</string>

    <!-- guide dev : webviews -->
    <string name="dev_title_webview">WebView</string>
    <string name="dev_description_webview"><i>WebView</i>s behave particularly on Android.\n\nFirst, if you want a page to be accessible, its HTML content must be accessible as well, it must follow the international standards: the WCAG2.\n\nSecond, on Android you must ensure that the WebView allows JavaScript:\n\nmWebView.getSettings.setJavaScriptEnabled(true);\n\nIn these conditions, the page displayed through the <i>WebView</i> properly responds to the Accessibility API.</string>

    <!-- guide dev : lists -->
    <string name="dev_title_listvoc">List vocalization</string>
    <string name="dev_description_listvoc">Sometimes the lists are not vocalized correctly: the speech synthesis is trying to vocalize the whole list at once (only the items displayed on the screen). This is especially the case when using the <i>RecyclerView</i>. To overcome this problem, there is a simple fix. Just set the "<i>focusable</i>" attribute to "<i>true</i>" for each item in the list.\nThis has the effect of forcing the speech synthesis (TalkBack) to read the items one by one.</string>

    <!-- guide dev : focus nav -->
    <string name="dev_title_focusnav">Navigating via the focus (keyboard)</string>
    <string name="dev_description_focusnav">To handle focus navigation, make sure to: \n\n-  Allow interactive elements to receive the focus: focus navigation only concerns interactive elements.\nIf, for example, your application has clickable custom views, it must be ensured that these views are focusable setting the "<i>focusable</i>" attribute to "<i>true</i>".\n\n-  Managing the focus order: through the <i>nextFocusDown, nextFocusUp, nextFocusRight,nextFocusLeft</i> options, you can specify what view should take the focus when using the down, up, right and left arrow.\n\n- Managing the focus display: interactive elements must have the <i>state_focused</i> defined and must be easily distinguishable when having the focus.\n\nNote: <i>nextFocusDown, nextFocusUp, nextFocusRight, nextFocusLeft, focusable</i> and other focus management options are available either in the xml or programmatically.</string>
    <string name="dev_lien_focusnav">- Handling focus on Android:\n\nhttp://developer.android.com/guide/topics/ui/accessibility/apps.html#focus-nav</string>


    <!-- Talkback view -->
    <string name="tb_what_title">What is it for?</string>
    <string name="tb_talkback_btn">Activate TalkBack</string>
    <string name="tb_how_title">How to use it?</string>
    <string name="tb_moves_btn">See the gesture list</string>
    <string name="tb_tuto_title">Gestures</string>
    <string name="tb_tuto_close">Close the tutorial</string>
    <string name="tb_links_title">Links</string>
    <string name="next">Next</string>
    <string name="previous">Previous</string>
    <string name="tb_what_description">TalkBack is a built-in screen reader for Android that reads aloud the items that appear on the device screen.\n\nIt is free and vocalize all visible elements in the page specially for blind or partially sighted, dyslexic or illiterate user. A tool like TalkBack is called either screen reader or speech synthesizers, even if a screen reader is actually a software associated with voice synthesis.</string>
    <string name="tb_how_description">When TalkBack is on, the standard gestures behave differently.\nFurthermore, additional gestures let you move the focus on the screen and control the selected items.\n\nTalkBack has gestures with one, two and three fingers to select and to go through elements. We describe here the basic gestures commonly used.\n\nNote: TalkBack is considered as accessible since the JellyBean release (4.1) because you can navigate sequentially.</string>
    <string name="tb_talkbackgesture1"><b>Drag one finger</b></string>
    <string name="tb_talkbackgesture1_sub">Explore your screen and hear audible feedback for what is being touched.</string>
    <string name="tb_talkbackgesture2"><b>Double-tap anywhere on the screen</b></string>
    <string name="tb_talkbackgesture2_sub">Opens or activates the item that you last touched (vocalized).</string>
    <string name="tb_talkbackgesture3"><b>Swipe up using two fingers</b></string>
    <string name="tb_talkbackgesture3_sub">Scroll within lists or pages if selected. Equivalent to a vertical swipe</string>
    <string name="tb_talkbackgesture4"><b>Swipe down using two fingers</b></string>
    <string name="tb_talkbackgesture4_sub">Scroll within lists or pages if selected. Equivalent to a vertical swipe</string>
    <string name="tb_talkbackgesture5"><b>Swipe left using two fingers</b></string>
    <string name="tb_talkbackgesture5_sub">Change pages and screens when possible. Equivalent to a horizontal swipe. </string>
    <string name="tb_talkbackgesture6"><b>Swipe right using two fingers</b></string>
    <string name="tb_talkbackgesture6_sub">Change pages and screens when possible. Equivalent to a horizontal swipe. </string>
    <string name="tb_talkbackgesture7"><b>Swipe right using one finger</b></string>
    <string name="tb_talkbackgesture7_sub">Move the focus to the next item.</string>
    <string name="tb_talkbackgesture8"><b>Swipe left using one finger</b></string>
    <string name="tb_talkbackgesture8_sub">Move the focus to the previous item.</string>
    <string name="tb_talkbackgesture9"><b>Swipe down using one finger</b></string>
    <string name="tb_talkbackgesture9_sub">Cycle through navigation mode: "pages", "by default (elements)", "characters", "words", "lines" et "paragraphs".</string>
    <string name="tb_talkbackgesture10"><b>Swipe up using one finger</b></string>
    <string name="tb_talkbackgesture10_sub">Cycle through navigation mode: "pages", "by default (elements)", "characters", "words", "lines" et "paragraphs".</string>
    <string name="tb_talkbackgesture_credits">This images are licensed under a Creative Commons Share Alike 2.0 license and modified by Orange.\nPhoto credit: openexhibits ( <a href="http://www.flickr.com/people/27512715@N02/" rel="tb_talkbackgesture_credits">http://www.flickr.com/people/27512715@N02/</a> )</string>
    <string name="tb_talkbackgesture_links">For more information about TalkBack and a detailed description of its features, please read the <a href="https://support.google.com/accessibility/android/answer/6283677?hl=en&amp;ref_topic=3529932/" rel="tb_talkbackgesture_links">Google\'s official documentation on TalkBack</a></string>


    <!-- accessible options view -->
    <string name="options_content">On Android there are several accessibility options to help disabled people. We will present you a sub part of the available options:</string>
    <string name="options_content_txtSize">This option allows to increase the font size on the phone and on the applications. We will refer to approximately 120% zoom on the text size. As explained in the developer guide, it is necessary for applications to do what it takes for this to work properly. Finally, some constructors may offer more zoom levels.</string>
    <string name="options_content_zoom">Allows to zoom on the screen. Once enabled, tap three times the screen to perform a zoom. It is then possible to set the zoom level (pinch) or adjusting the displayed area (sliding with two fingers).</string>
    <string name="options_content_colors">This option allows to correct any color related problems depending on the visual impairment. Currently, there three modes for the colorblinds (deuteranomaly, protanomaly and tritanomaly). Since Android 5 only.</string>
    <string name="options_content_colorInversion">This option allows to invert colors on the screen, allowing to correct poor contrast on some application. Since Android 5 only.</string>
    <string name="options_content_description">Description</string>
    <string name="options_content_list_title">Accessibility option list</string>
    <string name="options_content_btn">Go to accessibility settings</string>
    <string-array name="options_list">
        <item>Font size</item>
        <item>Zoom</item>
        <item>Correcting colors</item>
        <item>Inverting colors</item>
    </string-array>
    <string-array name="options_list2">
        <item>Font size</item>
        <item>Zoom</item>
        <item>Correcting colors\n(This option is not available on your device)</item>
        <item>Inverting colors\n(This option is not available on your device)</item>
    </string-array>


    <!-- accessibility & Orange view -->
    <string name="orange_title">And at Orange?</string>
    <string name="orange_content">Orange is striving to make its mobile applications accessible. In this section we offer a list of applications that held a special interest to accessibility for their developments.</string>
    <string name="orange_accessible_app">Some accessible applications</string>
    <string name="orange_cd_accessible_app">Select one</string>
    <string name="orange_cd_app">Application link</string>
    <string name="orange_monreseau">My Network</string>
    <string name="orange_malivebox">My Livebox</string>
    <string name="orange_orangeetmoi">My Orange</string>
    <string name="orange_orangefootballclub">Orange Football Club</string>


    <!-- contact view -->
    <string name="contact_title">EASE</string>
    <string name="contact_website">Web site:</string>
    <string name="contact_website_link"><a href="http://webidea.si.francetelecom.fr/spip/spip.php?rubrique119"><u>Click here to contact us</u></a></string>
    <string name="contact_support">Request assistance:</string>
    <string name="contact_support_link"><a href="http://isf.idea.rd.francetelecom.fr/issue.html?applicationId=4453&amp;amp;projectName="><u>Click here to the support request</u></a></string>
    <string name="contact_team">Contact the team:</string>
    <string name="contact_team_mail"><a href="accessibility.support@orange.com"><u>Send an email</u></a></string>
    <string name="contact_cd_website_link">Contact link</string>
    <string name="contact_cd_support_link">Support link</string>
    <string name="contact_cd_team_mail">Send an email to contact us</string>


    <!-- about view -->
    <string name="about_tittle">Orange SA</string>
    <string name="about_subtittle">mDAN v1.0.0</string>
    <string name="about_licence">Documentation under the <a href="TODO" rel="about_licence">CC BY 3.0 license</a>, source code of this site and examples under the  <a href="TODO" rel="about_licence">Apache 2.0 license</a>.\n\nThe Orange logo and some images or screenshots are property of Orange:\nCopyright &#169; 2016 Orange SA All rights reserved\n\n<a href="TODO" rel="about_licence">List of the concerned files</a></string>
    <string name="about_other_licences">Third party softwares</string>
    <string name="about_other_licences_content"><b>AnimatedExpandableListView</b>\nCopyright &#169; 2014 Gary Guo\n\nAnimatedExpandableListView licensed under the <a href="http://www.apache.org/licenses/LICENSE-2.0" rel="about_licence">Apache License, Version 2.0</a>\nFor more information: <a href="https://github.com/idunnololz/AnimatedExpandableListView" rel="about_licence">https://github.com/idunnololz/AnimatedExpandableListView</a>\n\n<b>Android Annotations</b>\nCopyright © 2012–2016 eBusiness Information\n\nAndroidAnnotations  licensed under the <a href="http://www.apache.org/licenses/LICENSE-2.0" rel="about_licence">Apache License, Version 2.0</a>\nFor more information: <a href="https://github.com/excilys/androidannotations/" rel="about_licence">https://github.com/excilys/androidannotations/</a>\n\n<b>Android Auto Scroll ViewPager</b>\nCopyright &#169; 2014 trinea.cn\n\nAndroidAutoScrollViewPager  licensed under the <a href="http://www.apache.org/licenses/LICENSE-2.0" rel="about_licence">Apache License, Version 2.0</a>\nFor more information: <a href="https://github.com/Trinea/android-auto-scroll-view-pager" rel="about_licence">https://github.com/Trinea/android-auto-scroll-view-pager</a>\n\n<b>The \"Mary Daisy Jane\" album cover</b>\nThe \"Mary Daisy Jane\" album cover, licensed under the <a href="https://creativecommons.org/licenses/by-sa/3.0/deed.en" rel="about_licence">Creative Commons Attribution-Share Alike 3.0 Unported</a> and is the property of its owners creators or holders.</string>

</resources>